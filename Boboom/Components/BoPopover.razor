@inject BoDomService Dom
@inject BoJsPartLibrary<BoPopover> Js
@inject ILogger<BoPopover> Logger
@implements IAsyncDisposable

<div @ref="selfElement" class="bo-popover">
    @ChildContent
</div>

@code {
    [Parameter]
    public RenderFragment? ChildContent { get; set; } 

    private ElementReference selfElement;
    private IJSObjectReference? parentElement;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
        parentElement = await Js.InvokeAsync<IJSObjectReference>("attachPopover", selfElement, selfElement.Id);
        var p = await Dom.GetPosition(parentElement);
        var s = await Dom.GetSize(parentElement);
        await Dom.SetPosition(selfElement, p.X,p.Y + s.Height);
        Logger.LogInformation("{0} {1}", p.X, p.Y + s.Height);
    }

    public async ValueTask DisposeAsync()
    {
        await Js.InvokeVoidAsync("detachPopover", selfElement, selfElement.Id);
    }
}
